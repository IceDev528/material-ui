{
  "componentDescription": "",
  "propDescriptions": {
    "className": "Class name applied to the root element.",
    "color": "The color of the component. It supports those theme colors that make sense for this component.",
    "component": "The component used for the root node. Either a string to use a HTML element or a component.",
    "defaultValue": "The default value. Use when the component is not controlled.",
    "disableIcon": "The radio&#39;s <code>disabledIcon</code> prop. If specified, the value is passed down to every radios under this element.",
    "name": "The name used to reference the value of the control. If you don&#39;t provide this prop, it falls back to a randomly generated name.",
    "onChange": "Callback fired when a radio button is selected.<br><br><strong>Signature:</strong><br><code>function(event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void</code><br><em>event:</em> The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string).",
    "orientation": "The component orientation.",
    "overlay": "The radio&#39;s <code>overlay</code> prop. If specified, the value is passed down to every radios under this element.",
    "size": "The size of the component.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "value": "Value of the selected radio button. The DOM API casts this to a string.",
    "variant": "The variant to use."
  },
  "classDescriptions": {}
}

{
  "componentDescription": "",
  "propDescriptions": {
    "children": "O conteúdo do componente.",
    "classes": "Sobrescreve ou extende os estilos aplicados para o componente. Veja a <a href=\"#css\">API CSS</a> abaixo para maiores detalhes.",
    "color": "The color of the button when it is in an active state.",
    "disabled": "Se <code>true</code>, o componente está desabilitado.",
    "disableFocusRipple": "If <code>true</code>, the  keyboard focus ripple is disabled.",
    "disableRipple": "If <code>true</code>, the ripple effect is disabled.<br>⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure to highlight the element by applying separate styles with the <code>.Mui-focusVisible</code> class.",
    "fullWidth": "Se <code>true</code>, o botão ocupará toda a largura de seu contêiner.",
    "selected": "If <code>true</code>, the button is rendered in an active state.",
    "size": "The size of the component. The prop defaults to the value inherited from the parent ToggleButtonGroup component.",
    "sx": "A propriedade do sistema que permite definir as suas substituições, assim como estilos CSS adicionais. Veja a <a href=\"/system/the-sx-prop/\">`sx` page</a> para mais detalhes.",
    "value": "The value to associate with the button when selected in a ToggleButtonGroup."
  },
  "classDescriptions": {
    "root": {
      "description": "Estilos aplicados ao elemento raiz."
    },
    "disabled": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>disabled={true}</code>"
    },
    "selected": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>selected={true}</code>"
    },
    "standard": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>color=\"standard\"</code>"
    },
    "primary": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>color=\"primary\"</code>"
    },
    "secondary": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>color=\"secondary\"</code>"
    },
    "sizeSmall": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>size=\"small\"</code>"
    },
    "sizeMedium": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>size=\"medium\"</code>"
    },
    "sizeLarge": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>size=\"large\"</code>"
    }
  }
}

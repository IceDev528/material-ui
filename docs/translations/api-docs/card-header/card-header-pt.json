{
  "componentDescription": "",
  "propDescriptions": {
    "action": "The action to display in the card header.",
    "avatar": "The Avatar element to display.",
    "classes": "Sobrescreve ou extende os estilos aplicados para o componente. Veja a <a href=\"#css\">API CSS</a> abaixo para maiores detalhes.",
    "component": "The component used for the root node. Either a string to use a HTML element or a component.",
    "disableTypography": "If <code>true</code>, <code>subheader</code> and <code>title</code> won&#39;t be wrapped by a Typography component. This can be useful to render an alternative Typography variant by wrapping the <code>title</code> text, and optional <code>subheader</code> text with the Typography component.",
    "subheader": "O conteúdo do componente.",
    "subheaderTypographyProps": "These props will be forwarded to the subheader (as long as disableTypography is not <code>true</code>).",
    "sx": "A propriedade do sistema que permite definir as suas substituições, assim como estilos CSS adicionais. Veja a <a href=\"/system/the-sx-prop/\">`sx` page</a> para mais detalhes.",
    "title": "O conteúdo do componente.",
    "titleTypographyProps": "These props will be forwarded to the title (as long as disableTypography is not <code>true</code>)."
  },
  "classDescriptions": {
    "root": {
      "description": "Estilos aplicados ao elemento raiz."
    },
    "avatar": {
      "description": "Estilos aplicados a {{nodeName}}.",
      "nodeName": "the avatar element"
    },
    "action": {
      "description": "Estilos aplicados a {{nodeName}}.",
      "nodeName": "the action element"
    },
    "content": {
      "description": "Estilos aplicados a {{nodeName}}.",
      "nodeName": "the content wrapper element"
    },
    "title": {
      "description": "Estilos aplicados a {{nodeName}}.",
      "nodeName": "the title Typography element"
    },
    "subheader": {
      "description": "Estilos aplicados a {{nodeName}}.",
      "nodeName": "the subheader Typography element"
    }
  }
}

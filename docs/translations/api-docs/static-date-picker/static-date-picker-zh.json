{
  "componentDescription": "",
  "propDescriptions": {
    "acceptRegex": "Regular expression to detect &quot;accepted&quot; symbols.",
    "className": "className applied to the root component.",
    "dateAdapter": "Allows to pass configured date-io adapter directly. More info <a href=\"https://next.material-ui-pickers.dev/guides/date-adapter-passing\">here</a> <code>jsx dateAdapter={new AdapterDateFns({ locale: ruLocale })} </code>",
    "disableCloseOnSelect": "If <code>true</code> the popup or dialog will immediately close after submitting full date.",
    "disabled": "If <code>true</code>, the picker and text field are disabled.",
    "disableMaskedInput": "Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.",
    "disableOpenPicker": "Do not render open picker button (renders only text field with validation).",
    "displayStaticWrapperAs": "Force static wrapper inner components to be rendered in mobile or desktop mode",
    "getOpenDialogAriaText": "Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType",
    "InputAdornmentProps": "Props to pass to keyboard input adornment.",
    "inputFormat": "Format string.",
    "mask": "Custom mask. Can be used to override generate from format. (e.g. <strong>/</strong>/<strong>__ __:</strong> or <strong>/</strong>/<strong>__ __:</strong> _M)",
    "onAccept": "Callback fired when date is accepted @DateIOType.",
    "onChange": "Callback fired when the value (the selected date) changes @DateIOType.",
    "onClose": "Callback fired when the popup requests to be closed. Use in controlled mode (see open).",
    "onError": "Callback that fired when input value or new <code>value</code> prop validation returns <strong>new</strong> validation error (or value is valid after error). In case of validation error detected <code>reason</code> prop return non-null value and <code>TextField</code> must be displayed in <code>error</code> state. This can be used to render appropriate form error.<br><a href=\"https://next.material-ui-pickers.dev/guides/forms\">Read the guide</a> about form integration and error displaying.",
    "onOpen": "Callback fired when the popup requests to be opened. Use in controlled mode (see open).",
    "open": "Control the popup or dialog open state.",
    "OpenPickerButtonProps": "Props to pass to keyboard adornment button.",
    "openPickerIcon": "Icon displaying for open picker button.",
    "orientation": "Force rendering in particular orientation.",
    "readOnly": "Make picker read only.",
    "renderInput": "The <code>renderInput</code> prop allows you to customize the rendered input. The <code>props</code> argument of this render prop contains props of <a href=\"https://material-ui.com/api/text-field/#textfield-api\">TextField</a> that you need to forward. Pay specific attention to the <code>ref</code> and <code>inputProps</code> keys.",
    "rifmFormatter": "Custom formatter to be passed into Rifm component.",
    "showToolbar": "If <code>true</code>, show the toolbar even in desktop mode.",
    "ToolbarComponent": "Component that will replace default toolbar renderer.",
    "toolbarFormat": "Date format, that is displaying in toolbar.",
    "toolbarPlaceholder": "Mobile picker date value placeholder, displaying if <code>value</code> === <code>null</code>.",
    "toolbarTitle": "Mobile picker title, displaying in the toolbar.",
    "value": "The value of the picker."
  },
  "classDescriptions": {}
}

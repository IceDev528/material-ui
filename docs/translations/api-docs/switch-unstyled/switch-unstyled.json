{
  "componentDescription": "The foundation for building custom-styled switches.",
  "propDescriptions": {
    "checked": "If <code>true</code>, the component is checked.",
    "className": "Class name applied to the root element.",
    "component": "The component used for the Root slot. Either a string to use a HTML element or a component. This is equivalent to <code>components.Root</code>. If both are provided, the <code>component</code> is used.",
    "components": "The components used for each slot inside the Switch. Either a string to use a HTML element or a component.",
    "componentsProps": "The props used for each slot inside the Switch.",
    "defaultChecked": "The default checked state. Use when the component is not controlled.",
    "disabled": "If <code>true</code>, the component is disabled.",
    "onChange": "Callback fired when the state is changed.<br><br><strong>Signature:</strong><br><code>function(event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void</code><br><em>event:</em> The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string). You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean).",
    "readOnly": "If <code>true</code>, the component is read only.",
    "required": "If <code>true</code>, the <code>input</code> element is required."
  },
  "classDescriptions": {}
}

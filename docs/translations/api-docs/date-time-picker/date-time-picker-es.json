{
  "componentDescription": "",
  "propDescriptions": {
    "acceptRegex": "Regular expression to detect &quot;accepted&quot; symbols.",
    "allowSameDateSelection": "If <code>true</code>, <code>onChange</code> is fired on click even if the same date is selected.",
    "ampm": "12h/24h view for hour selection clock.",
    "ampmInClock": "Display ampm controls under the clock (instead of in the toolbar).",
    "cancelText": "Cancel text message.",
    "className": "className applied to the root component.",
    "clearable": "If <code>true</code>, it shows the clear action in the picker dialog.",
    "clearText": "Clear text message.",
    "components": "The components used for each slot. Either a string to use a HTML element or a component.",
    "componentsProps": "The props used for each slot inside.",
    "dateRangeIcon": "Date tab icon.",
    "defaultCalendarMonth": "Default calendar month displayed when <code>value={null}</code>.",
    "desktopModeMediaQuery": "CSS media query when <code>Mobile</code> mode will be changed to <code>Desktop</code>.",
    "DialogProps": "Props applied to the <a href=\"/api/dialog/\"><code>Dialog</code></a> element.",
    "disableCloseOnSelect": "If <code>true</code> the popup or dialog will immediately close after submitting full date.",
    "disabled": "If <code>true</code>, the picker and text field are disabled.",
    "disableHighlightToday": "If <code>true</code>, todays date is rendering without highlighting with circle.",
    "disableIgnoringDatePartForTimeValidation": "Do not ignore date part when validating min/max time.",
    "disableMaskedInput": "Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.",
    "disableOpenPicker": "Do not render open picker button (renders only text field with validation).",
    "getClockLabelText": "Accessible text that helps user to understand which time and view is selected.",
    "getOpenDialogAriaText": "Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType",
    "getViewSwitchingButtonText": "Get aria-label text for switching between views button.",
    "hideTabs": "To show tabs.",
    "InputAdornmentProps": "Props to pass to keyboard input adornment.",
    "inputFormat": "Format string.",
    "inputRef": "Pass a ref to the <code>input</code> element.",
    "leftArrowButtonText": "Left arrow icon aria-label text.",
    "loading": "If <code>true</code> renders <code>LoadingComponent</code> in calendar instead of calendar view. Can be used to preload information and show it in calendar.",
    "mask": "Custom mask. Can be used to override generate from format. (e.g. <code>__/__/____ __:__</code> or <code>__/__/____ __:__ _M</code>).",
    "maxDateTime": "Minimal selectable moment of time with binding to date, to set max time in each day use <code>maxTime</code>.",
    "minDateTime": "Minimal selectable moment of time with binding to date, to set min time in each day use <code>minTime</code>.",
    "minutesStep": "Step over minutes.",
    "okText": "Ok button text.",
    "onAccept": "Callback fired when date is accepted @DateIOType.",
    "onChange": "Callback fired when the value (the selected date) changes @DateIOType.",
    "onClose": "Callback fired when the popup requests to be closed. Use in controlled mode (see open).",
    "onError": "Callback that fired when input value or new <code>value</code> prop validation returns <strong>new</strong> validation error (or value is valid after error). In case of validation error detected <code>reason</code> prop return non-null value and <code>TextField</code> must be displayed in <code>error</code> state. This can be used to render appropriate form error.<br><a href=\"https://next.material-ui-pickers.dev/guides/forms\">Read the guide</a> about form integration and error displaying.",
    "onMonthChange": "Callback firing on month change. @DateIOType",
    "onOpen": "Callback fired when the popup requests to be opened. Use in controlled mode (see open).",
    "onViewChange": "Callback fired on view change.",
    "onYearChange": "Callback firing on year change @DateIOType.",
    "open": "Control the popup or dialog open state.",
    "OpenPickerButtonProps": "Props to pass to keyboard adornment button.",
    "openTo": "First view to show.",
    "orientation": "Force rendering in particular orientation.",
    "PopperProps": "Popper props passed down to <a href=\"https://material-ui.com/api/popper/\">Popper</a> component.",
    "readOnly": "Make picker read only.",
    "reduceAnimations": "Disable heavy animations.",
    "renderDay": "Custom renderer for day. Check the <a href=\"https://material-ui.com/api/pickers-day/\">PickersDay</a> component.",
    "renderInput": "The <code>renderInput</code> prop allows you to customize the rendered input. The <code>props</code> argument of this render prop contains props of <a href=\"https://material-ui.com/api/text-field/#textfield-api\">TextField</a> that you need to forward. Pay specific attention to the <code>ref</code> and <code>inputProps</code> keys.",
    "renderLoading": "Component displaying when passed <code>loading</code> true.",
    "rifmFormatter": "Custom formatter to be passed into Rifm component.",
    "rightArrowButtonText": "Right arrow icon aria-label text.",
    "shouldDisableDate": "Disable specific date. @DateIOType",
    "shouldDisableTime": "Dynamically check if time is disabled or not. If returns <code>false</code> appropriate time point will ot be acceptable.",
    "shouldDisableYear": "Disable specific years dynamically. Works like <code>shouldDisableDate</code> but for year selection view @DateIOType.",
    "showDaysOutsideCurrentMonth": "If <code>true</code>, days that have <code>outsideCurrentMonth={true}</code> are displayed.",
    "showTodayButton": "If <code>true</code>, the today button is displayed. <strong>Note</strong> that <code>showClearButton</code> has a higher priority.",
    "showToolbar": "If <code>true</code>, show the toolbar even in desktop mode.",
    "timeIcon": "Time tab icon.",
    "todayText": "Today text message.",
    "ToolbarComponent": "Component that will replace default toolbar renderer.",
    "toolbarFormat": "Date format, that is displaying in toolbar.",
    "toolbarPlaceholder": "Mobile picker date value placeholder, displaying if <code>value</code> === <code>null</code>.",
    "toolbarTitle": "Mobile picker title, displaying in the toolbar.",
    "TransitionComponent": "Custom component for popper <a href=\"https://material-ui.com/components/transitions/#transitioncomponent-prop\">Transition</a>.",
    "value": "The value of the picker.",
    "views": "Array of views to show."
  },
  "classDescriptions": {}
}

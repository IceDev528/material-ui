{
  "componentDescription": "",
  "propDescriptions": {
    "acceptRegex": "Regular expression to detect &quot;accepted&quot; symbols.",
    "allowKeyboardControl": "Enables keyboard listener for moving between days in calendar. Defaults to <code>true</code> unless the <code>ClockPicker</code> is used inside a <code>Static*</code> picker component.",
    "ampm": "12h/24h view for hour selection clock.",
    "ampmInClock": "Display ampm controls under the clock (instead of in the toolbar).",
    "className": "className applied to the root component.",
    "disableCloseOnSelect": "If <code>true</code> the popup or dialog will immediately close after submitting full date.",
    "disabled": "If <code>true</code>, the picker and text field are disabled.",
    "disableIgnoringDatePartForTimeValidation": "Do not ignore date part when validating min/max time.",
    "disableMaskedInput": "Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.",
    "disableOpenPicker": "Do not render open picker button (renders only text field with validation).",
    "getClockLabelText": "Accessible text that helps user to understand which time and view is selected.",
    "getOpenDialogAriaText": "Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType",
    "InputAdornmentProps": "Props to pass to keyboard input adornment.",
    "inputFormat": "Format string.",
    "mask": "Custom mask. Can be used to override generate from format. (e.g. <code>__/__/____ __:__</code> or <code>__/__/____ __:__ _M</code>).",
    "minutesStep": "Step over minutes.",
    "onAccept": "Callback fired when date is accepted @DateIOType.",
    "onChange": "Callback fired when the value (the selected date) changes @DateIOType.",
    "onClose": "Callback fired when the popup requests to be closed. Use in controlled mode (see open).",
    "onError": "Callback that fired when input value or new <code>value</code> prop validation returns <strong>new</strong> validation error (or value is valid after error). In case of validation error detected <code>reason</code> prop return non-null value and <code>TextField</code> must be displayed in <code>error</code> state. This can be used to render appropriate form error.<br><a href=\"https://next.material-ui-pickers.dev/guides/forms\">Read the guide</a> about form integration and error displaying.",
    "onOpen": "Callback fired when the popup requests to be opened. Use in controlled mode (see open).",
    "open": "Control the popup or dialog open state.",
    "OpenPickerButtonProps": "Props to pass to keyboard adornment button.",
    "openPickerIcon": "Icon displaying for open picker button.",
    "openTo": "First view to show.",
    "orientation": "Force rendering in particular orientation.",
    "PopperProps": "Popper props passed down to <a href=\"https://material-ui.com/api/popper/\">Popper</a> component.",
    "readOnly": "Make picker read only.",
    "renderInput": "The <code>renderInput</code> prop allows you to customize the rendered input. The <code>props</code> argument of this render prop contains props of <a href=\"https://material-ui.com/api/text-field/#textfield-api\">TextField</a> that you need to forward. Pay specific attention to the <code>ref</code> and <code>inputProps</code> keys.",
    "rifmFormatter": "Custom formatter to be passed into Rifm component.",
    "shouldDisableTime": "Dynamically check if time is disabled or not. If returns <code>false</code> appropriate time point will ot be acceptable.",
    "showToolbar": "If <code>true</code>, show the toolbar even in desktop mode.",
    "ToolbarComponent": "Component that will replace default toolbar renderer.",
    "toolbarFormat": "Date format, that is displaying in toolbar.",
    "toolbarPlaceholder": "Mobile picker date value placeholder, displaying if <code>value</code> === <code>null</code>.",
    "toolbarTitle": "Mobile picker title, displaying in the toolbar.",
    "TransitionComponent": "Custom component for popper <a href=\"https://material-ui.com/components/transitions/#transitioncomponent-prop\">Transition</a>.",
    "value": "The value of the picker.",
    "views": "Array of views to show."
  },
  "classDescriptions": {}
}

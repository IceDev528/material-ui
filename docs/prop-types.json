{
  "MobileWrapper": {
    "okLabel": {
      "defaultValue": {
        "value": "OK"
      },
      "description": "\"OK\" label message",
      "name": "okLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "cancelLabel": {
      "defaultValue": {
        "value": "Cancel"
      },
      "description": "\"CANCEL\" label message",
      "name": "cancelLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "clearLabel": {
      "defaultValue": {
        "value": "Clear"
      },
      "description": "\"CLEAR\" label message",
      "name": "clearLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "todayLabel": {
      "defaultValue": {
        "value": "Today"
      },
      "description": "\"TODAY\" label message",
      "name": "todayLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "showTodayButton": {
      "defaultValue": {
        "value": false
      },
      "description": "If true today button will be displayed. **Note** that clear button has higher priority",
      "name": "showTodayButton",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "clearable": {
      "defaultValue": {
        "value": false
      },
      "description": "Show clear action in picker dialog",
      "name": "clearable",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "DialogProps": {
      "defaultValue": null,
      "description": "Props to be passed directly to material-ui Dialog",
      "name": "DialogProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "Partial<MuiDialogProps>"
      }
    },
    "PopoverProps": {
      "defaultValue": null,
      "description": "Popover props passed to material-ui Popover",
      "name": "PopoverProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/DesktopWrapper.tsx",
        "name": "InnerDesktopWrapperProps"
      },
      "required": false,
      "type": {
        "name": "Partial<PopoverProps>"
      }
    }
  },
  "DesktopWrapper": {
    "PopoverProps": {
      "defaultValue": null,
      "description": "Popover props passed to material-ui Popover",
      "name": "PopoverProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/DesktopWrapper.tsx",
        "name": "InnerDesktopWrapperProps"
      },
      "required": false,
      "type": {
        "name": "Partial<PopoverProps>"
      }
    },
    "okLabel": {
      "defaultValue": {
        "value": "\"OK\""
      },
      "description": "\"OK\" label message",
      "name": "okLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "cancelLabel": {
      "defaultValue": {
        "value": "\"CANCEL\""
      },
      "description": "\"CANCEL\" label message",
      "name": "cancelLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "clearLabel": {
      "defaultValue": {
        "value": "\"CLEAR\""
      },
      "description": "\"CLEAR\" label message",
      "name": "clearLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "todayLabel": {
      "defaultValue": {
        "value": "\"TODAY\""
      },
      "description": "\"TODAY\" label message",
      "name": "todayLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "showTodayButton": {
      "defaultValue": {
        "value": "false"
      },
      "description": "If true today button will be displayed. **Note** that clear button has higher priority",
      "name": "showTodayButton",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "clearable": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Show clear action in picker dialog",
      "name": "clearable",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "DialogProps": {
      "defaultValue": null,
      "description": "Props to be passed directly to material-ui Dialog",
      "name": "DialogProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/MobileWrapper.tsx",
        "name": "InnerMobileWrapperProps"
      },
      "required": false,
      "type": {
        "name": "Partial<MuiDialogProps>"
      }
    }
  },
  "DatePicker": {
    "onYearChange": {
      "defaultValue": null,
      "description": "Callback firing on year change",
      "name": "onYearChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePicker.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": {
        "name": "(date: DateIOType) => void"
      }
    },
    "showDaysOutsideCurrentMonth": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Display disabled dates outside the current month",
      "name": "showDaysOutsideCurrentMonth",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "leftArrowIcon": {
      "defaultValue": null,
      "description": "Left arrow icon",
      "name": "leftArrowIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "rightArrowIcon": {
      "defaultValue": null,
      "description": "Right arrow icon",
      "name": "rightArrowIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "leftArrowButtonProps": {
      "defaultValue": null,
      "description": "Props to pass to left arrow button",
      "name": "leftArrowButtonProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "Partial<IconButtonProps>"
      }
    },
    "rightArrowButtonProps": {
      "defaultValue": null,
      "description": "Props to pass to right arrow button",
      "name": "rightArrowButtonProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "Partial<IconButtonProps>"
      }
    },
    "leftArrowButtonText": {
      "defaultValue": null,
      "description": "Left arrow icon aria-label text",
      "name": "leftArrowButtonText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "rightArrowButtonText": {
      "defaultValue": null,
      "description": "Right arrow icon aria-label text",
      "name": "rightArrowButtonText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "getViewSwitchingButtonText": {
      "defaultValue": null,
      "description": "Get aria-label text for switching between views button",
      "name": "getViewSwitchingButtonText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/CalendarHeader.tsx",
        "name": "CalendarHeaderProps"
      },
      "required": false,
      "type": {
        "name": "(currentView: \"date\" | \"year\" | \"month\") => string"
      }
    },
    "minDate": {
      "defaultValue": {
        "value": "Date(1900-01-01)"
      },
      "description": "Min selectable date",
      "name": "minDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/CalendarView.tsx",
        "name": "CalendarViewProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "maxDate": {
      "defaultValue": {
        "value": "Date(2100-01-01)"
      },
      "description": "Max selectable date",
      "name": "maxDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/CalendarView.tsx",
        "name": "CalendarViewProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "disablePast": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Disable past dates",
      "name": "disablePast",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disableFuture": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Disable future dates",
      "name": "disableFuture",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "onMonthChange": {
      "defaultValue": null,
      "description": "Callback firing on month change. Return promise to render spinner till it will not be resolved",
      "name": "onMonthChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/CalendarView.tsx",
        "name": "CalendarViewProps"
      },
      "required": false,
      "type": {
        "name": "(date: DateIOType) => void | Promise<void>"
      }
    },
    "reduceAnimations": {
      "defaultValue": {
        "value": "/(android)/i.test(navigator.userAgent)"
      },
      "description": "Do not show heavy animations, significantly improves performance on slow devices",
      "name": "reduceAnimations",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/CalendarView.tsx",
        "name": "CalendarViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "shouldDisableDate": {
      "defaultValue": null,
      "description": "Disable specific date",
      "name": "shouldDisableDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/CalendarView.tsx",
        "name": "CalendarViewProps"
      },
      "required": false,
      "type": {
        "name": "(day: DateIOType) => boolean"
      }
    },
    "renderDay": {
      "defaultValue": null,
      "description": "Custom renderer for day. Check [DayComponentProps api](https://material-ui-pickers.dev/api/Day)",
      "name": "renderDay",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "(day: DateIOType, selectedDate: DateIOType, DayComponentProps: DayProps) => Element"
      }
    },
    "allowKeyboardControl": {
      "defaultValue": {
        "value": "currentWrapper !== 'static'"
      },
      "description": "Enables keyboard listener for moving between days in calendar",
      "name": "allowKeyboardControl",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "loadingIndicator": {
      "defaultValue": null,
      "description": "Custom loading indicator",
      "name": "loadingIndicator",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "Element"
      }
    },
    "minDateMessage": {
      "defaultValue": {
        "value": "'Date should not be before minimal date'"
      },
      "description": "Error message, shown if date is less then minimal date",
      "name": "minDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "maxDateMessage": {
      "defaultValue": {
        "value": "'Date should not be after maximal date'"
      },
      "description": "Error message, shown if date is more then maximal date",
      "name": "maxDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "invalidDateMessage": {
      "defaultValue": {
        "value": "'Invalid Date Format'"
      },
      "description": "Message, appearing when date cannot be parsed",
      "name": "invalidDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "BaseValidationProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "value": {
      "defaultValue": null,
      "description": "Picker value",
      "name": "value",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": {
        "name": "ParsableDate"
      }
    },
    "onChange": {
      "defaultValue": null,
      "description": "onChange callback",
      "name": "onChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": {
        "name": "(date: DateIOType, keyboardInputValue?: string) => void"
      }
    },
    "autoOk": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Auto accept date on selection",
      "name": "autoOk",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "inputFormat": {
      "defaultValue": null,
      "description": "Format string",
      "name": "inputFormat",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "disabled": {
      "defaultValue": null,
      "description": "Disable picker and text field",
      "name": "disabled",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "readOnly": {
      "defaultValue": null,
      "description": "Make picker read only",
      "name": "readOnly",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "defaultHighlight": {
      "defaultValue": null,
      "description": "Date that will be initially highlighted if null was passed",
      "name": "defaultHighlight",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "onAccept": {
      "defaultValue": null,
      "description": "Callback fired when date is accepted",
      "name": "onAccept",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "(date: DateIOType) => void"
      }
    },
    "onError": {
      "defaultValue": null,
      "description": "Callback fired when new error should be displayed\n(!! This is a side effect. Be careful if you want to rerender the component)",
      "name": "onError",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "(error: ReactNode, value: DateIOType) => void"
      }
    },
    "onOpen": {
      "defaultValue": null,
      "description": "On open callback",
      "name": "onOpen",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "() => void"
      }
    },
    "onClose": {
      "defaultValue": null,
      "description": "On close callback",
      "name": "onClose",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "() => void"
      }
    },
    "open": {
      "defaultValue": null,
      "description": "Controlled picker open state",
      "name": "open",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "showToolbar": {
      "defaultValue": null,
      "description": "Show toolbar even in desktop mode",
      "name": "showToolbar",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "orientation": {
      "defaultValue": null,
      "description": "Force rendering in particular orientation",
      "name": "orientation",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "\"portrait\" | \"landscape\""
      }
    },
    "ToolbarComponent": {
      "defaultValue": null,
      "description": "Component that will replace default toolbar renderer",
      "name": "ToolbarComponent",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "ComponentClass<ToolbarComponentProps<any>, any> | FunctionComponent<ToolbarComponentProps<any>>"
      }
    },
    "title": {
      "defaultValue": {
        "value": "\"SELECT DATE\""
      },
      "description": "Mobile picker title, displaying in the toolbar",
      "name": "title",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "strictCompareDates": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Compare dates by the exact timestamp, instead of start/end of date",
      "name": "strictCompareDates",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "mask": {
      "defaultValue": null,
      "description": "Custom mask. Can be used to override generate from format. (e.g. __/__/____ __:__)",
      "name": "mask",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "TextFieldComponent": {
      "defaultValue": null,
      "description": "Override input component",
      "name": "TextFieldComponent",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "ComponentClass<TextFieldProps, any> | FunctionComponent<TextFieldProps>"
      }
    },
    "emptyLabel": {
      "defaultValue": {
        "value": "' '"
      },
      "description": "Message displaying in text field, if null passed",
      "name": "emptyLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "invalidLabel": {
      "defaultValue": {
        "value": "'unknown'"
      },
      "description": "Message displaying in text field if date is invalid (doesn't work in keyboard mode)",
      "name": "invalidLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "keyboardIcon": {
      "defaultValue": null,
      "description": "Icon displaying for open picker button",
      "name": "keyboardIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "maskChar": {
      "defaultValue": {
        "value": "'_'"
      },
      "description": "Char string that will be replaced with number (for \"_\" mask will be \"__/__/____\")",
      "name": "maskChar",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "acceptRegex": {
      "defaultValue": {
        "value": "/\\dap/gi"
      },
      "description": "Regular expression to detect \"accepted\" symbols",
      "name": "acceptRegex",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "RegExp"
      }
    },
    "InputAdornmentProps": {
      "defaultValue": null,
      "description": "Props to pass to keyboard input adornment",
      "name": "InputAdornmentProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "Partial<InputAdornmentProps>"
      }
    },
    "KeyboardButtonProps": {
      "defaultValue": null,
      "description": "Props to pass to keyboard adornment button",
      "name": "KeyboardButtonProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "Partial<IconButtonProps>"
      }
    },
    "rifmFormatter": {
      "defaultValue": null,
      "description": "Custom formatter to be passed into Rifm component",
      "name": "rifmFormatter",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "(str: string) => string"
      }
    },
    "hideOpenPickerButton": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Do not render open picker button (renders only text field with validation)",
      "name": "hideOpenPickerButton",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disableMaskedInput": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format",
      "name": "disableMaskedInput",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "getOpenDialogAriaText": {
      "defaultValue": null,
      "description": "Get aria-label text for control that opens datepicker dialog. Aria-label have to include selected date.",
      "name": "getOpenDialogAriaText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "(value: ParsableDate, utils: MuiPickersUtils) => string"
      }
    },
    "views": {
      "defaultValue": null,
      "description": "Array of views to show",
      "name": "views",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/Picker/makePickerWithState.tsx",
        "name": "WithViewsProps"
      },
      "required": false,
      "type": {
        "name": "(\"date\" | \"year\" | \"month\")[]"
      }
    },
    "openTo": {
      "defaultValue": null,
      "description": "First view to show",
      "name": "openTo",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/Picker/makePickerWithState.tsx",
        "name": "WithViewsProps"
      },
      "required": false,
      "type": {
        "name": "\"date\" | \"year\" | \"month\""
      }
    }
  },
  "TimePicker": {
    "ampm": {
      "defaultValue": {
        "value": "true"
      },
      "description": "12h/24h view for hour selection clock",
      "name": "ampm",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "minutesStep": {
      "defaultValue": {
        "value": "1"
      },
      "description": "Step over minutes",
      "name": "minutesStep",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "ampmInClock": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Display ampm controls under the clock (instead of in the toolbar)",
      "name": "ampmInClock",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "allowKeyboardControl": {
      "defaultValue": {
        "value": "currentWrapper !== 'static'"
      },
      "description": "Enables keyboard listener for moving between days in calendar",
      "name": "allowKeyboardControl",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "minTime": {
      "defaultValue": null,
      "description": "Min time, date part by default, will be ignored",
      "name": "minTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "maxTime": {
      "defaultValue": null,
      "description": "Max time, date part by default, will be ignored",
      "name": "maxTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "shouldDisableTime": {
      "defaultValue": null,
      "description": "Dynamically check if time is disabled or not",
      "name": "shouldDisableTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "(timeValue: number, clockType: \"hours\" | \"minutes\" | \"seconds\") => boolean"
      }
    },
    "disableTimeValidationIgnoreDatePart": {
      "defaultValue": null,
      "description": "Do not ignore date part when validating min/max time",
      "name": "disableTimeValidationIgnoreDatePart",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "views": {
      "defaultValue": null,
      "description": "Array of views to show",
      "name": "views",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/Picker/makePickerWithState.tsx",
        "name": "WithViewsProps"
      },
      "required": false,
      "type": {
        "name": "(\"hours\" | \"minutes\" | \"seconds\")[]"
      }
    },
    "openTo": {
      "defaultValue": null,
      "description": "First view to show",
      "name": "openTo",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/Picker/makePickerWithState.tsx",
        "name": "WithViewsProps"
      },
      "required": false,
      "type": {
        "name": "\"hours\" | \"minutes\" | \"seconds\""
      }
    },
    "minDateMessage": {
      "defaultValue": {
        "value": "'Date should not be before minimal date'"
      },
      "description": "Error message, shown if date is less then minimal date",
      "name": "minDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "maxDateMessage": {
      "defaultValue": {
        "value": "'Date should not be after maximal date'"
      },
      "description": "Error message, shown if date is more then maximal date",
      "name": "maxDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "invalidDateMessage": {
      "defaultValue": {
        "value": "'Invalid Date Format'"
      },
      "description": "Message, appearing when date cannot be parsed",
      "name": "invalidDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "BaseValidationProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "value": {
      "defaultValue": null,
      "description": "Picker value",
      "name": "value",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": {
        "name": "ParsableDate"
      }
    },
    "onChange": {
      "defaultValue": null,
      "description": "onChange callback",
      "name": "onChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": {
        "name": "(date: DateIOType, keyboardInputValue?: string) => void"
      }
    },
    "autoOk": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Auto accept date on selection",
      "name": "autoOk",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "inputFormat": {
      "defaultValue": null,
      "description": "Format string",
      "name": "inputFormat",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "disabled": {
      "defaultValue": null,
      "description": "Disable picker and text field",
      "name": "disabled",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "readOnly": {
      "defaultValue": null,
      "description": "Make picker read only",
      "name": "readOnly",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "defaultHighlight": {
      "defaultValue": null,
      "description": "Date that will be initially highlighted if null was passed",
      "name": "defaultHighlight",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "onAccept": {
      "defaultValue": null,
      "description": "Callback fired when date is accepted",
      "name": "onAccept",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "(date: DateIOType) => void"
      }
    },
    "onError": {
      "defaultValue": null,
      "description": "Callback fired when new error should be displayed\n(!! This is a side effect. Be careful if you want to rerender the component)",
      "name": "onError",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "(error: ReactNode, value: DateIOType) => void"
      }
    },
    "onOpen": {
      "defaultValue": null,
      "description": "On open callback",
      "name": "onOpen",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "() => void"
      }
    },
    "onClose": {
      "defaultValue": null,
      "description": "On close callback",
      "name": "onClose",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "() => void"
      }
    },
    "open": {
      "defaultValue": null,
      "description": "Controlled picker open state",
      "name": "open",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "showToolbar": {
      "defaultValue": null,
      "description": "Show toolbar even in desktop mode",
      "name": "showToolbar",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "orientation": {
      "defaultValue": null,
      "description": "Force rendering in particular orientation",
      "name": "orientation",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "\"portrait\" | \"landscape\""
      }
    },
    "ToolbarComponent": {
      "defaultValue": null,
      "description": "Component that will replace default toolbar renderer",
      "name": "ToolbarComponent",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "ComponentClass<ToolbarComponentProps<any>, any> | FunctionComponent<ToolbarComponentProps<any>>"
      }
    },
    "title": {
      "defaultValue": {
        "value": "\"SELECT DATE\""
      },
      "description": "Mobile picker title, displaying in the toolbar",
      "name": "title",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "strictCompareDates": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Compare dates by the exact timestamp, instead of start/end of date",
      "name": "strictCompareDates",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "mask": {
      "defaultValue": null,
      "description": "Custom mask. Can be used to override generate from format. (e.g. __/__/____ __:__)",
      "name": "mask",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "TextFieldComponent": {
      "defaultValue": null,
      "description": "Override input component",
      "name": "TextFieldComponent",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "ComponentClass<TextFieldProps, any> | FunctionComponent<TextFieldProps>"
      }
    },
    "emptyLabel": {
      "defaultValue": {
        "value": "' '"
      },
      "description": "Message displaying in text field, if null passed",
      "name": "emptyLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "invalidLabel": {
      "defaultValue": {
        "value": "'unknown'"
      },
      "description": "Message displaying in text field if date is invalid (doesn't work in keyboard mode)",
      "name": "invalidLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "keyboardIcon": {
      "defaultValue": null,
      "description": "Icon displaying for open picker button",
      "name": "keyboardIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "maskChar": {
      "defaultValue": {
        "value": "'_'"
      },
      "description": "Char string that will be replaced with number (for \"_\" mask will be \"__/__/____\")",
      "name": "maskChar",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "acceptRegex": {
      "defaultValue": {
        "value": "/\\dap/gi"
      },
      "description": "Regular expression to detect \"accepted\" symbols",
      "name": "acceptRegex",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "RegExp"
      }
    },
    "InputAdornmentProps": {
      "defaultValue": null,
      "description": "Props to pass to keyboard input adornment",
      "name": "InputAdornmentProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "Partial<InputAdornmentProps>"
      }
    },
    "KeyboardButtonProps": {
      "defaultValue": null,
      "description": "Props to pass to keyboard adornment button",
      "name": "KeyboardButtonProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "Partial<IconButtonProps>"
      }
    },
    "rifmFormatter": {
      "defaultValue": null,
      "description": "Custom formatter to be passed into Rifm component",
      "name": "rifmFormatter",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "(str: string) => string"
      }
    },
    "hideOpenPickerButton": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Do not render open picker button (renders only text field with validation)",
      "name": "hideOpenPickerButton",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disableMaskedInput": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format",
      "name": "disableMaskedInput",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "getOpenDialogAriaText": {
      "defaultValue": null,
      "description": "Get aria-label text for control that opens datepicker dialog. Aria-label have to include selected date.",
      "name": "getOpenDialogAriaText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "(value: ParsableDate, utils: MuiPickersUtils) => string"
      }
    }
  },
  "DateTimePicker": {
    "minDateMessage": {
      "defaultValue": {
        "value": "'Date should not be before minimal date'"
      },
      "description": "Error message, shown if date is less then minimal date",
      "name": "minDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "maxDateMessage": {
      "defaultValue": {
        "value": "'Date should not be after maximal date'"
      },
      "description": "Error message, shown if date is more then maximal date",
      "name": "maxDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "invalidDateMessage": {
      "defaultValue": {
        "value": "'Invalid Date Format'"
      },
      "description": "Message, appearing when date cannot be parsed",
      "name": "invalidDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "BaseValidationProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "value": {
      "defaultValue": null,
      "description": "Picker value",
      "name": "value",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": {
        "name": "ParsableDate"
      }
    },
    "onChange": {
      "defaultValue": null,
      "description": "onChange callback",
      "name": "onChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": {
        "name": "(date: DateIOType, keyboardInputValue?: string) => void"
      }
    },
    "autoOk": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Auto accept date on selection",
      "name": "autoOk",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "inputFormat": {
      "defaultValue": null,
      "description": "Format string",
      "name": "inputFormat",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "disabled": {
      "defaultValue": null,
      "description": "Disable picker and text field",
      "name": "disabled",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "readOnly": {
      "defaultValue": null,
      "description": "Make picker read only",
      "name": "readOnly",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "defaultHighlight": {
      "defaultValue": null,
      "description": "Date that will be initially highlighted if null was passed",
      "name": "defaultHighlight",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "onAccept": {
      "defaultValue": null,
      "description": "Callback fired when date is accepted",
      "name": "onAccept",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "(date: DateIOType) => void"
      }
    },
    "onError": {
      "defaultValue": null,
      "description": "Callback fired when new error should be displayed\n(!! This is a side effect. Be careful if you want to rerender the component)",
      "name": "onError",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "(error: ReactNode, value: DateIOType) => void"
      }
    },
    "onOpen": {
      "defaultValue": null,
      "description": "On open callback",
      "name": "onOpen",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "() => void"
      }
    },
    "onClose": {
      "defaultValue": null,
      "description": "On close callback",
      "name": "onClose",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "() => void"
      }
    },
    "open": {
      "defaultValue": null,
      "description": "Controlled picker open state",
      "name": "open",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "showToolbar": {
      "defaultValue": null,
      "description": "Show toolbar even in desktop mode",
      "name": "showToolbar",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "orientation": {
      "defaultValue": null,
      "description": "Force rendering in particular orientation",
      "name": "orientation",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "\"portrait\" | \"landscape\""
      }
    },
    "ToolbarComponent": {
      "defaultValue": null,
      "description": "Component that will replace default toolbar renderer",
      "name": "ToolbarComponent",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "ComponentClass<ToolbarComponentProps<any>, any> | FunctionComponent<ToolbarComponentProps<any>>"
      }
    },
    "title": {
      "defaultValue": {
        "value": "\"SELECT DATE\""
      },
      "description": "Mobile picker title, displaying in the toolbar",
      "name": "title",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "strictCompareDates": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Compare dates by the exact timestamp, instead of start/end of date",
      "name": "strictCompareDates",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/typings/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "mask": {
      "defaultValue": null,
      "description": "Custom mask. Can be used to override generate from format. (e.g. __/__/____ __:__)",
      "name": "mask",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "TextFieldComponent": {
      "defaultValue": null,
      "description": "Override input component",
      "name": "TextFieldComponent",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "ComponentClass<TextFieldProps, any> | FunctionComponent<TextFieldProps>"
      }
    },
    "emptyLabel": {
      "defaultValue": {
        "value": "' '"
      },
      "description": "Message displaying in text field, if null passed",
      "name": "emptyLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "invalidLabel": {
      "defaultValue": {
        "value": "'unknown'"
      },
      "description": "Message displaying in text field if date is invalid (doesn't work in keyboard mode)",
      "name": "invalidLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "keyboardIcon": {
      "defaultValue": null,
      "description": "Icon displaying for open picker button",
      "name": "keyboardIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "maskChar": {
      "defaultValue": {
        "value": "'_'"
      },
      "description": "Char string that will be replaced with number (for \"_\" mask will be \"__/__/____\")",
      "name": "maskChar",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "acceptRegex": {
      "defaultValue": {
        "value": "/\\dap/gi"
      },
      "description": "Regular expression to detect \"accepted\" symbols",
      "name": "acceptRegex",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "RegExp"
      }
    },
    "InputAdornmentProps": {
      "defaultValue": null,
      "description": "Props to pass to keyboard input adornment",
      "name": "InputAdornmentProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "Partial<InputAdornmentProps>"
      }
    },
    "KeyboardButtonProps": {
      "defaultValue": null,
      "description": "Props to pass to keyboard adornment button",
      "name": "KeyboardButtonProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "Partial<IconButtonProps>"
      }
    },
    "rifmFormatter": {
      "defaultValue": null,
      "description": "Custom formatter to be passed into Rifm component",
      "name": "rifmFormatter",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "(str: string) => string"
      }
    },
    "hideOpenPickerButton": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Do not render open picker button (renders only text field with validation)",
      "name": "hideOpenPickerButton",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disableMaskedInput": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format",
      "name": "disableMaskedInput",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "getOpenDialogAriaText": {
      "defaultValue": null,
      "description": "Get aria-label text for control that opens datepicker dialog. Aria-label have to include selected date.",
      "name": "getOpenDialogAriaText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/PureDateInput.tsx",
        "name": "DateInputProps"
      },
      "required": false,
      "type": {
        "name": "(value: ParsableDate, utils: MuiPickersUtils) => string"
      }
    },
    "hideTabs": {
      "defaultValue": null,
      "description": "To show tabs",
      "name": "hideTabs",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DateTimePicker/DateTimePicker.tsx",
        "name": "DateTimePickerViewsProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "dateRangeIcon": {
      "defaultValue": null,
      "description": "Date tab icon",
      "name": "dateRangeIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DateTimePicker/DateTimePicker.tsx",
        "name": "DateTimePickerViewsProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "timeIcon": {
      "defaultValue": null,
      "description": "Time tab icon",
      "name": "timeIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DateTimePicker/DateTimePicker.tsx",
        "name": "DateTimePickerViewsProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "minDateTime": {
      "defaultValue": null,
      "description": "Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`",
      "name": "minDateTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DateTimePicker/DateTimePicker.tsx",
        "name": "DateTimePickerViewsProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "maxDateTime": {
      "defaultValue": null,
      "description": "Minimal selectable moment of time with binding to date, to set max time in each day use `maxTime`",
      "name": "maxDateTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DateTimePicker/DateTimePicker.tsx",
        "name": "DateTimePickerViewsProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "ampm": {
      "defaultValue": {
        "value": "true"
      },
      "description": "12h/24h view for hour selection clock",
      "name": "ampm",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "minutesStep": {
      "defaultValue": {
        "value": "1"
      },
      "description": "Step over minutes",
      "name": "minutesStep",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "ampmInClock": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Display ampm controls under the clock (instead of in the toolbar)",
      "name": "ampmInClock",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "allowKeyboardControl": {
      "defaultValue": {
        "value": "currentWrapper !== 'static'\ncurrentWrapper !== 'static'"
      },
      "description": "Enables keyboard listener for moving between days in calendar\nEnables keyboard listener for moving between days in calendar",
      "name": "allowKeyboardControl",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "minTime": {
      "defaultValue": null,
      "description": "Min time, date part by default, will be ignored",
      "name": "minTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "maxTime": {
      "defaultValue": null,
      "description": "Max time, date part by default, will be ignored",
      "name": "maxTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "shouldDisableTime": {
      "defaultValue": null,
      "description": "Dynamically check if time is disabled or not",
      "name": "shouldDisableTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "(timeValue: number, clockType: \"hours\" | \"minutes\" | \"seconds\") => boolean"
      }
    },
    "disableTimeValidationIgnoreDatePart": {
      "defaultValue": null,
      "description": "Do not ignore date part when validating min/max time",
      "name": "disableTimeValidationIgnoreDatePart",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "onYearChange": {
      "defaultValue": null,
      "description": "Callback firing on year change",
      "name": "onYearChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePicker.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": {
        "name": "(date: DateIOType) => void"
      }
    },
    "showDaysOutsideCurrentMonth": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Display disabled dates outside the current month",
      "name": "showDaysOutsideCurrentMonth",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "leftArrowIcon": {
      "defaultValue": null,
      "description": "Left arrow icon",
      "name": "leftArrowIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "rightArrowIcon": {
      "defaultValue": null,
      "description": "Right arrow icon",
      "name": "rightArrowIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "leftArrowButtonProps": {
      "defaultValue": null,
      "description": "Props to pass to left arrow button",
      "name": "leftArrowButtonProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "Partial<IconButtonProps>"
      }
    },
    "rightArrowButtonProps": {
      "defaultValue": null,
      "description": "Props to pass to right arrow button",
      "name": "rightArrowButtonProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "Partial<IconButtonProps>"
      }
    },
    "leftArrowButtonText": {
      "defaultValue": null,
      "description": "Left arrow icon aria-label text",
      "name": "leftArrowButtonText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "rightArrowButtonText": {
      "defaultValue": null,
      "description": "Right arrow icon aria-label text",
      "name": "rightArrowButtonText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "getViewSwitchingButtonText": {
      "defaultValue": null,
      "description": "Get aria-label text for switching between views button",
      "name": "getViewSwitchingButtonText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/CalendarHeader.tsx",
        "name": "CalendarHeaderProps"
      },
      "required": false,
      "type": {
        "name": "(currentView: DatePickerView) => string"
      }
    },
    "minDate": {
      "defaultValue": {
        "value": "Date(1900-01-01)"
      },
      "description": "Min selectable date",
      "name": "minDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/CalendarView.tsx",
        "name": "CalendarViewProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "maxDate": {
      "defaultValue": {
        "value": "Date(2100-01-01)"
      },
      "description": "Max selectable date",
      "name": "maxDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/CalendarView.tsx",
        "name": "CalendarViewProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "disablePast": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Disable past dates",
      "name": "disablePast",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disableFuture": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Disable future dates",
      "name": "disableFuture",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "onMonthChange": {
      "defaultValue": null,
      "description": "Callback firing on month change. Return promise to render spinner till it will not be resolved",
      "name": "onMonthChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/CalendarView.tsx",
        "name": "CalendarViewProps"
      },
      "required": false,
      "type": {
        "name": "(date: DateIOType) => void | Promise<void>"
      }
    },
    "reduceAnimations": {
      "defaultValue": {
        "value": "/(android)/i.test(navigator.userAgent)"
      },
      "description": "Do not show heavy animations, significantly improves performance on slow devices",
      "name": "reduceAnimations",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/CalendarView.tsx",
        "name": "CalendarViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "shouldDisableDate": {
      "defaultValue": null,
      "description": "Disable specific date",
      "name": "shouldDisableDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/CalendarView.tsx",
        "name": "CalendarViewProps"
      },
      "required": false,
      "type": {
        "name": "(day: DateIOType) => boolean"
      }
    },
    "renderDay": {
      "defaultValue": null,
      "description": "Custom renderer for day. Check [DayComponentProps api](https://material-ui-pickers.dev/api/Day)",
      "name": "renderDay",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "(day: DateIOType, selectedDate: DateIOType, DayComponentProps: DayProps) => Element"
      }
    },
    "loadingIndicator": {
      "defaultValue": null,
      "description": "Custom loading indicator",
      "name": "loadingIndicator",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "Element"
      }
    },
    "views": {
      "defaultValue": null,
      "description": "Array of views to show",
      "name": "views",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/Picker/makePickerWithState.tsx",
        "name": "WithViewsProps"
      },
      "required": false,
      "type": {
        "name": "(\"date\" | \"year\" | \"month\" | \"hours\" | \"minutes\")[]"
      }
    },
    "openTo": {
      "defaultValue": null,
      "description": "First view to show",
      "name": "openTo",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/Picker/makePickerWithState.tsx",
        "name": "WithViewsProps"
      },
      "required": false,
      "type": {
        "name": "\"date\" | \"year\" | \"month\" | \"hours\" | \"minutes\""
      }
    }
  },
  "Calendar": {
    "date": {
      "defaultValue": null,
      "description": "Calendar Date",
      "name": "date",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": true,
      "type": {
        "name": "DateIOType"
      }
    },
    "onChange": {
      "defaultValue": null,
      "description": "Calendar onChange",
      "name": "onChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": true,
      "type": {
        "name": "PickerOnChangeFn"
      }
    },
    "disablePast": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Disable past dates",
      "name": "disablePast",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disableFuture": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Disable future dates",
      "name": "disableFuture",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "renderDay": {
      "defaultValue": null,
      "description": "Custom renderer for day. Check [DayComponentProps api](https://material-ui-pickers.dev/api/Day)",
      "name": "renderDay",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "(day: DateIOType, selectedDate: DateIOType, DayComponentProps: DayProps) => Element"
      }
    },
    "allowKeyboardControl": {
      "defaultValue": {
        "value": "currentWrapper !== 'static'"
      },
      "description": "Enables keyboard listener for moving between days in calendar",
      "name": "allowKeyboardControl",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "loadingIndicator": {
      "defaultValue": null,
      "description": "Custom loading indicator",
      "name": "loadingIndicator",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Calendar.tsx",
        "name": "ExportedCalendarProps"
      },
      "required": false,
      "type": {
        "name": "Element"
      }
    },
    "showDaysOutsideCurrentMonth": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Display disabled dates outside the current month",
      "name": "showDaysOutsideCurrentMonth",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    }
  },
  "Day": {
    "day": {
      "defaultValue": null,
      "description": "The date to show",
      "name": "day",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": true,
      "type": {
        "name": "any"
      }
    },
    "focused": {
      "defaultValue": {
        "value": false
      },
      "description": "Is focused by keyboard navigation",
      "name": "focused",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "focusable": {
      "defaultValue": {
        "value": false
      },
      "description": "Can be focused by tabbing in",
      "name": "focusable",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "isInCurrentMonth": {
      "defaultValue": null,
      "description": "Is day in current month",
      "name": "isInCurrentMonth",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": true,
      "type": {
        "name": "boolean"
      }
    },
    "isAnimating": {
      "defaultValue": null,
      "description": "Is switching month animation going on right now",
      "name": "isAnimating",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "isToday": {
      "defaultValue": {
        "value": false
      },
      "description": "Is today?",
      "name": "isToday",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disabled": {
      "defaultValue": {
        "value": false
      },
      "description": "Disabled?",
      "name": "disabled",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "selected": {
      "defaultValue": {
        "value": false
      },
      "description": "Selected?",
      "name": "selected",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "allowKeyboardControl": {
      "defaultValue": null,
      "description": "Is keyboard control and focus management enabled",
      "name": "allowKeyboardControl",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disableMargin": {
      "defaultValue": {
        "value": false
      },
      "description": "Disable margin between days, useful for displaying range of days",
      "name": "disableMargin",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "showDaysOutsideCurrentMonth": {
      "defaultValue": {
        "value": false
      },
      "description": "Display disabled dates outside the current month",
      "name": "showDaysOutsideCurrentMonth",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Calendar/Day.tsx",
        "name": "DayProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    }
  },
  "ClockView": {
    "date": {
      "defaultValue": null,
      "description": "Selected date",
      "name": "date",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": true,
      "type": {
        "name": "DateIOType"
      }
    },
    "type": {
      "defaultValue": null,
      "description": "Clock type",
      "name": "type",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": true,
      "type": {
        "name": "\"hours\" | \"minutes\" | \"seconds\""
      }
    },
    "onDateChange": {
      "defaultValue": null,
      "description": "On change date without moving between views",
      "name": "onDateChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": true,
      "type": {
        "name": "PickerOnChangeFn"
      }
    },
    "onChange": {
      "defaultValue": null,
      "description": "On change callback",
      "name": "onChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": true,
      "type": {
        "name": "PickerOnChangeFn"
      }
    },
    "getHoursClockNumberText": {
      "defaultValue": {
        "value": null
      },
      "description": "Get clock number aria-text for hours",
      "name": "getHoursClockNumberText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": false,
      "type": {
        "name": "(hoursText: string) => string"
      }
    },
    "getMinutesClockNumberText": {
      "defaultValue": {
        "value": null
      },
      "description": "Get clock number aria-text for minutes",
      "name": "getMinutesClockNumberText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": false,
      "type": {
        "name": "(minutesText: string) => string"
      }
    },
    "getSecondsClockNumberText": {
      "defaultValue": {
        "value": null
      },
      "description": "Get clock number aria-text for seconds",
      "name": "getSecondsClockNumberText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ClockViewProps"
      },
      "required": false,
      "type": {
        "name": "(secondsText: string) => string"
      }
    },
    "ampm": {
      "defaultValue": {
        "value": "true"
      },
      "description": "12h/24h view for hour selection clock",
      "name": "ampm",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "minutesStep": {
      "defaultValue": {
        "value": 1
      },
      "description": "Step over minutes",
      "name": "minutesStep",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "ampmInClock": {
      "defaultValue": {
        "value": "false"
      },
      "description": "Display ampm controls under the clock (instead of in the toolbar)",
      "name": "ampmInClock",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "allowKeyboardControl": {
      "defaultValue": {
        "value": "currentWrapper !== 'static'"
      },
      "description": "Enables keyboard listener for moving between days in calendar",
      "name": "allowKeyboardControl",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "minTime": {
      "defaultValue": null,
      "description": "Min time, date part by default, will be ignored",
      "name": "minTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "maxTime": {
      "defaultValue": null,
      "description": "Max time, date part by default, will be ignored",
      "name": "maxTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "ParsableDate"
      }
    },
    "shouldDisableTime": {
      "defaultValue": null,
      "description": "Dynamically check if time is disabled or not",
      "name": "shouldDisableTime",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "(timeValue: number, clockType: \"hours\" | \"minutes\" | \"seconds\") => boolean"
      }
    },
    "disableTimeValidationIgnoreDatePart": {
      "defaultValue": null,
      "description": "Do not ignore date part when validating min/max time",
      "name": "disableTimeValidationIgnoreDatePart",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/views/Clock/ClockView.tsx",
        "name": "ExportedClockViewProps"
      },
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "leftArrowIcon": {
      "defaultValue": null,
      "description": "Left arrow icon",
      "name": "leftArrowIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "rightArrowIcon": {
      "defaultValue": null,
      "description": "Right arrow icon",
      "name": "rightArrowIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "leftArrowButtonText": {
      "defaultValue": {
        "value": "open previous view"
      },
      "description": "Left arrow icon aria-label text",
      "name": "leftArrowButtonText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "rightArrowButtonText": {
      "defaultValue": {
        "value": "open next view"
      },
      "description": "Right arrow icon aria-label text",
      "name": "rightArrowButtonText",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "leftArrowButtonProps": {
      "defaultValue": null,
      "description": "Props to pass to left arrow button",
      "name": "leftArrowButtonProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "Partial<IconButtonProps>"
      }
    },
    "rightArrowButtonProps": {
      "defaultValue": null,
      "description": "Props to pass to right arrow button",
      "name": "rightArrowButtonProps",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/ArrowSwitcher.tsx",
        "name": "ExportedArrowSwitcherProps"
      },
      "required": false,
      "type": {
        "name": "Partial<IconButtonProps>"
      }
    }
  }
}
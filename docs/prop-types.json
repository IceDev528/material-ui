{
  "DatePicker/DatePicker.tsx": {
    "value": {
      "defaultValue": null,
      "description": "Picker value",
      "name": "value",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "DateType" }
    },
    "onChange": {
      "defaultValue": null,
      "description": "onChange callback",
      "name": "onChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "(date: any) => void" }
    },
    "autoOk": {
      "defaultValue": null,
      "description": "Auto accept date on selection",
      "name": "autoOk",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "ampm": {
      "defaultValue": null,
      "description": "Control 12h or 24h view mode for clock",
      "name": "ampm",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "format": {
      "defaultValue": null,
      "description": "Format string",
      "name": "format",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "string" }
    },
    "labelFunc": {
      "defaultValue": null,
      "description": "Dynamic formatter of text field label",
      "name": "labelFunc",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "(date: any, invalidLabel: string) => string" }
    },
    "initialFocusedDate": {
      "defaultValue": null,
      "description": "Date that will be initially highlighted",
      "name": "initialFocusedDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "DateType" }
    },
    "invalidLabel": {
      "defaultValue": null,
      "description": "Message displaying in text field, if date is invalid (doesn't work in keyboard mode)",
      "name": "invalidLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "string" }
    },
    "emptyLabel": {
      "defaultValue": null,
      "description": "Message displaying in text field, if null passed (doesn't work in keyboard mode)",
      "name": "emptyLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "string" }
    },
    "onAccept": {
      "defaultValue": null,
      "description": "Callback fired when date isAccepted",
      "name": "onAccept",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "(date: any) => void" }
    },
    "minDate": {
      "defaultValue": null,
      "description": "Min selectable date",
      "name": "minDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "DateType" }
    },
    "maxDate": {
      "defaultValue": null,
      "description": "Max selectable date",
      "name": "maxDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "DateType" }
    },
    "minDateMessage": {
      "defaultValue": { "value": "Date should not be before minimal date" },
      "description": "Error message, shown if date is less then minimal date",
      "name": "minDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": { "name": "ReactNode" }
    },
    "maxDateMessage": {
      "defaultValue": { "value": "Date should not be after maximal date" },
      "description": "Error message, shown if date is more then maximal date",
      "name": "maxDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": { "name": "ReactNode" }
    },
    "invalidDateMessage": {
      "defaultValue": { "value": "Invalid Date Format" },
      "description": "Message, appearing when date cannot be parsed",
      "name": "invalidDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": { "name": "ReactNode" }
    },
    "disablePast": {
      "defaultValue": null,
      "description": "Disable past dates",
      "name": "disablePast",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "disableFuture": {
      "defaultValue": null,
      "description": "Disable future dates",
      "name": "disableFuture",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "animateYearScrolling": {
      "defaultValue": null,
      "description": "To animate scrolling to current year (with scrollIntoView)",
      "name": "animateYearScrolling",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "views": {
      "defaultValue": null,
      "description": "Array of views to show. Order year -> month -> day",
      "name": "views",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "(\"year\" | \"month\" | \"day\")[]" }
    },
    "openTo": {
      "defaultValue": null,
      "description": "Initial view to show when date picker is open",
      "name": "openTo",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "\"year\" | \"month\" | \"day\"" }
    },
    "openToYearSelection": {
      "defaultValue": null,
      "description": "@deprecated use openTo instead",
      "name": "openToYearSelection",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "leftArrowIcon": {
      "defaultValue": null,
      "description": "Left arrow icon",
      "name": "leftArrowIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "ReactNode" }
    },
    "rightArrowIcon": {
      "defaultValue": null,
      "description": "Right arrow icon",
      "name": "rightArrowIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "ReactNode" }
    },
    "renderDay": {
      "defaultValue": null,
      "description": "Custom renderer for day",
      "name": "renderDay",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "RenderDay" }
    },
    "allowKeyboardControl": {
      "defaultValue": null,
      "description": "Enables keyboard listener for moving between days in calendar",
      "name": "allowKeyboardControl",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "shouldDisableDate": {
      "defaultValue": null,
      "description": "Disable specific date",
      "name": "shouldDisableDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "(day: any) => boolean" }
    },
    "onYearChange": {
      "defaultValue": null,
      "description": "Callback firing on year change",
      "name": "onYearChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "(date: any) => void" }
    },
    "onMonthChange": {
      "defaultValue": null,
      "description": "Callback firing on month change",
      "name": "onMonthChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "(date: any) => void" }
    },
    "onOpen": {
      "defaultValue": null,
      "description": "On open callback\nOn open callback",
      "name": "onOpen",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/ModalWrapper.tsx",
        "name": "ModalWrapperProps"
      },
      "required": true,
      "type": { "name": "(() => void) | (() => void)" }
    },
    "onClose": {
      "defaultValue": null,
      "description": "On close callback\nOn close callback",
      "name": "onClose",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/ModalWrapper.tsx",
        "name": "ModalWrapperProps"
      },
      "required": true,
      "type": { "name": "(() => void) | (() => void)" }
    }
  },
  "TimePicker/TimePicker.tsx": {
    "value": {
      "defaultValue": null,
      "description": "Picker value",
      "name": "value",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "DateType" }
    },
    "onChange": {
      "defaultValue": null,
      "description": "onChange callback",
      "name": "onChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "(date: any) => void" }
    },
    "autoOk": {
      "defaultValue": null,
      "description": "Auto accept date on selection",
      "name": "autoOk",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "ampm": {
      "defaultValue": { "value": "false" },
      "description": "Control 12h or 24h view mode for clock\n12h/24h view for hour selection clock",
      "name": "ampm",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "boolean" }
    },
    "format": {
      "defaultValue": null,
      "description": "Format string",
      "name": "format",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "string" }
    },
    "labelFunc": {
      "defaultValue": null,
      "description": "Dynamic formatter of text field label",
      "name": "labelFunc",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "(date: any, invalidLabel: string) => string" }
    },
    "initialFocusedDate": {
      "defaultValue": null,
      "description": "Date that will be initially highlighted",
      "name": "initialFocusedDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "DateType" }
    },
    "invalidLabel": {
      "defaultValue": null,
      "description": "Message displaying in text field, if date is invalid (doesn't work in keyboard mode)",
      "name": "invalidLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "string" }
    },
    "emptyLabel": {
      "defaultValue": null,
      "description": "Message displaying in text field, if null passed (doesn't work in keyboard mode)",
      "name": "emptyLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "string" }
    },
    "onAccept": {
      "defaultValue": null,
      "description": "Callback fired when date isAccepted",
      "name": "onAccept",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "(date: any) => void" }
    },
    "seconds": {
      "defaultValue": null,
      "description": "Show the seconds view",
      "name": "seconds",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/TimePicker/TimePickerRoot.tsx",
        "name": "BaseTimePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "minutesStep": {
      "defaultValue": null,
      "description": "Step over minutes",
      "name": "minutesStep",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/TimePicker/TimePickerRoot.tsx",
        "name": "BaseTimePickerProps"
      },
      "required": false,
      "type": { "name": "number" }
    },
    "onOpen": {
      "defaultValue": null,
      "description": "On open callback\nOn open callback",
      "name": "onOpen",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/ModalWrapper.tsx",
        "name": "ModalWrapperProps"
      },
      "required": true,
      "type": { "name": "(() => void) | (() => void)" }
    },
    "onClose": {
      "defaultValue": null,
      "description": "On close callback\nOn close callback",
      "name": "onClose",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/ModalWrapper.tsx",
        "name": "ModalWrapperProps"
      },
      "required": true,
      "type": { "name": "(() => void) | (() => void)" }
    }
  },
  "DateTimePicker/DateTimePicker.tsx": {
    "value": {
      "defaultValue": null,
      "description": "Picker value",
      "name": "value",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "DateType" }
    },
    "onChange": {
      "defaultValue": null,
      "description": "onChange callback",
      "name": "onChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "(date: any) => void" }
    },
    "autoOk": {
      "defaultValue": null,
      "description": "Auto accept date on selection",
      "name": "autoOk",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "ampm": {
      "defaultValue": { "value": "false" },
      "description": "Control 12h or 24h view mode for clock\nControl 12h or 24h view mode for clock",
      "name": "ampm",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "boolean" }
    },
    "format": {
      "defaultValue": null,
      "description": "Format string",
      "name": "format",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "string" }
    },
    "labelFunc": {
      "defaultValue": null,
      "description": "Dynamic formatter of text field label",
      "name": "labelFunc",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "(date: any, invalidLabel: string) => string" }
    },
    "initialFocusedDate": {
      "defaultValue": null,
      "description": "Date that will be initially highlighted",
      "name": "initialFocusedDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "DateType" }
    },
    "invalidLabel": {
      "defaultValue": null,
      "description": "Message displaying in text field, if date is invalid (doesn't work in keyboard mode)",
      "name": "invalidLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "string" }
    },
    "emptyLabel": {
      "defaultValue": null,
      "description": "Message displaying in text field, if null passed (doesn't work in keyboard mode)",
      "name": "emptyLabel",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "string" }
    },
    "onAccept": {
      "defaultValue": null,
      "description": "Callback fired when date isAccepted",
      "name": "onAccept",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": false,
      "type": { "name": "(date: any) => void" }
    },
    "minDate": {
      "defaultValue": null,
      "description": "Min selectable date",
      "name": "minDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "DateType" }
    },
    "maxDate": {
      "defaultValue": null,
      "description": "Max selectable date",
      "name": "maxDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_shared/BasePicker.tsx",
        "name": "BasePickerProps"
      },
      "required": true,
      "type": { "name": "DateType" }
    },
    "minDateMessage": {
      "defaultValue": null,
      "description": "Error message, shown if date is less then minimal date",
      "name": "minDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": { "name": "ReactNode" }
    },
    "maxDateMessage": {
      "defaultValue": null,
      "description": "Error message, shown if date is more then maximal date",
      "name": "maxDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": { "name": "ReactNode" }
    },
    "invalidDateMessage": {
      "defaultValue": null,
      "description": "Message, appearing when date cannot be parsed",
      "name": "invalidDateMessage",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/_helpers/text-field-helper.ts",
        "name": "DateValidationProps"
      },
      "required": false,
      "type": { "name": "ReactNode" }
    },
    "autoSubmit": {
      "defaultValue": null,
      "description": "Auto move between date, hours and minutes",
      "name": "autoSubmit",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DateTimePicker/DateTimePickerRoot.tsx",
        "name": "BaseDateTimePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "showTabs": {
      "defaultValue": null,
      "description": "Show or hide date/time tabs (hidden automatically on small screens)",
      "name": "showTabs",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DateTimePicker/DateTimePickerRoot.tsx",
        "name": "BaseDateTimePickerProps"
      },
      "required": true,
      "type": { "name": "boolean" }
    },
    "minutesStep": {
      "defaultValue": null,
      "description": "Step over minutes",
      "name": "minutesStep",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DateTimePicker/DateTimePickerRoot.tsx",
        "name": "BaseDateTimePickerProps"
      },
      "required": false,
      "type": { "name": "number" }
    },
    "openTo": {
      "defaultValue": null,
      "description": "Initial view to show when datetime picker is open",
      "name": "openTo",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DateTimePicker/DateTimePickerRoot.tsx",
        "name": "BaseDateTimePickerProps"
      },
      "required": false,
      "type": { "name": "\"date\" | \"year\" | \"hours\" | \"minutes\"" }
    },
    "dateRangeIcon": {
      "defaultValue": null,
      "description": "Date tab icon",
      "name": "dateRangeIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DateTimePicker/DateTimePickerRoot.tsx",
        "name": "BaseDateTimePickerProps"
      },
      "required": false,
      "type": { "name": "ReactNode" }
    },
    "timeIcon": {
      "defaultValue": null,
      "description": "Time tab icon",
      "name": "timeIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DateTimePicker/DateTimePickerRoot.tsx",
        "name": "BaseDateTimePickerProps"
      },
      "required": false,
      "type": { "name": "ReactNode" }
    },
    "ViewContainerComponent": {
      "defaultValue": null,
      "description": "Container component for date time picker views",
      "name": "ViewContainerComponent",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DateTimePicker/DateTimePickerRoot.tsx",
        "name": "BaseDateTimePickerProps"
      },
      "required": true,
      "type": { "name": "string | ComponentClass<any, any> | FunctionComponent<any>" }
    },
    "disablePast": {
      "defaultValue": null,
      "description": "Disable past dates",
      "name": "disablePast",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "disableFuture": {
      "defaultValue": null,
      "description": "Disable future dates",
      "name": "disableFuture",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "animateYearScrolling": {
      "defaultValue": null,
      "description": "To animate scrolling to current year (with scrollIntoView)",
      "name": "animateYearScrolling",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "leftArrowIcon": {
      "defaultValue": null,
      "description": "Left arrow icon",
      "name": "leftArrowIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "ReactNode" }
    },
    "rightArrowIcon": {
      "defaultValue": null,
      "description": "Right arrow icon",
      "name": "rightArrowIcon",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "ReactNode" }
    },
    "renderDay": {
      "defaultValue": null,
      "description": "Custom renderer for day",
      "name": "renderDay",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "RenderDay" }
    },
    "allowKeyboardControl": {
      "defaultValue": null,
      "description": "Enables keyboard listener for moving between days in calendar",
      "name": "allowKeyboardControl",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "boolean" }
    },
    "shouldDisableDate": {
      "defaultValue": null,
      "description": "Disable specific date",
      "name": "shouldDisableDate",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "(day: any) => boolean" }
    },
    "onYearChange": {
      "defaultValue": null,
      "description": "Callback firing on year change",
      "name": "onYearChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "(date: any) => void" }
    },
    "onMonthChange": {
      "defaultValue": null,
      "description": "Callback firing on month change",
      "name": "onMonthChange",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/DatePicker/DatePickerRoot.tsx",
        "name": "BaseDatePickerProps"
      },
      "required": false,
      "type": { "name": "(date: any) => void" }
    },
    "onOpen": {
      "defaultValue": null,
      "description": "On open callback\nOn open callback",
      "name": "onOpen",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/ModalWrapper.tsx",
        "name": "ModalWrapperProps"
      },
      "required": true,
      "type": { "name": "(() => void) | (() => void)" }
    },
    "onClose": {
      "defaultValue": null,
      "description": "On close callback\nOn close callback",
      "name": "onClose",
      "parent": {
        "fileName": "material-ui-pickers/lib/src/wrappers/ModalWrapper.tsx",
        "name": "ModalWrapperProps"
      },
      "required": true,
      "type": { "name": "(() => void) | (() => void)" }
    }
  }
}

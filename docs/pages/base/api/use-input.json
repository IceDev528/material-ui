{
  "parameters": {
    "defaultValue": {
      "type": {
        "name": "unknown",
        "description": "The default value. Use when the component is not controlled."
      }
    },
    "disabled": {
      "type": {
        "name": "boolean",
        "description": "If `true`, the component is disabled.\nThe prop defaults to the value (`false`) inherited from the parent FormControl component."
      }
    },
    "error": {
      "type": {
        "name": "boolean",
        "description": "If `true`, the `input` will indicate an error by setting the `aria-invalid` attribute.\nThe prop defaults to the value (`false`) inherited from the parent FormControl component."
      }
    },
    "inputRef": { "type": { "name": "React.Ref<HTMLInputElement>", "description": "" } },
    "onBlur": { "type": { "name": "React.FocusEventHandler", "description": "" } },
    "onChange": {
      "type": { "name": "React.ChangeEventHandler<HTMLInputElement>", "description": "" }
    },
    "onClick": { "type": { "name": "React.MouseEventHandler", "description": "" } },
    "onFocus": { "type": { "name": "React.FocusEventHandler", "description": "" } },
    "required": {
      "type": {
        "name": "boolean",
        "description": "If `true`, the `input` element is required.\nThe prop defaults to the value (`false`) inherited from the parent FormControl component."
      }
    },
    "value": { "type": { "name": "unknown", "description": "" } }
  },
  "returnValue": {},
  "name": "useInput",
  "filename": "/packages/mui-base/src/InputUnstyled/useInput.ts",
  "demos": "<ul><li><a href=\"/base/react-input/#hook\">Unstyled Input</a></li></ul>"
}

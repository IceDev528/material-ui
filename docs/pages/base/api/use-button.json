{
  "parameters": {
    "disabled": {
      "type": { "name": "boolean", "description": "If `true`, the component is disabled." },
      "default": "false"
    },
    "focusableWhenDisabled": {
      "type": {
        "name": "boolean",
        "description": "If `true`, allows a disabled button to receive focus."
      },
      "default": "false"
    },
    "href": { "type": { "name": "string", "description": "" } },
    "onFocusVisible": { "type": { "name": "React.FocusEventHandler", "description": "" } },
    "ref": { "type": { "name": "React.Ref<any>", "description": "" } },
    "tabIndex": {
      "type": { "name": "NonNullable<React.HTMLAttributes<any>['tabIndex']>", "description": "" }
    },
    "to": { "type": { "name": "string", "description": "" } },
    "type": {
      "type": {
        "name": "React.ButtonHTMLAttributes<HTMLButtonElement>['type']",
        "description": "Type attribute applied when the `component` is `button`."
      },
      "default": "'button'"
    }
  },
  "returnValue": {
    "active": {
      "type": { "name": "boolean", "description": "If `true`, the component is active (pressed)." },
      "default": "false",
      "required": true
    },
    "disabled": {
      "type": { "name": "boolean", "description": "If `true`, the component is disabled." },
      "default": "false",
      "required": true
    },
    "focusVisible": {
      "type": {
        "name": "boolean",
        "description": "If `true`, the component is being focused using keyboard."
      },
      "default": "false",
      "required": true
    },
    "getRootProps": {
      "type": {
        "name": "<TOther extends EventHandlers = {}>(otherHandlers?: TOther) => UseButtonRootSlotProps<TOther>",
        "description": "Resolver for the root slot's props."
      },
      "required": true
    },
    "setFocusVisible": {
      "type": {
        "name": "React.Dispatch<React.SetStateAction<boolean>>",
        "description": "Callback for setting the `focusVisible` param."
      },
      "required": true
    }
  },
  "name": "useButton",
  "filename": "/packages/mui-base/src/ButtonUnstyled/useButton.ts",
  "demos": "<ul><li><a href=\"/base/react-button/#hook\">Unstyled Button</a></li></ul>"
}

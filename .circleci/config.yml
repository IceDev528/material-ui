####################
# Defaults
####################
defaults: &js_defaults
  docker:
    - image: circleci/node:lts
      environment:
        ## this enables colors in the output
        TERM: xterm
  working_directory: ~/material-ui-pickers

version: 2.1

####################
# Custom jobs
####################
jobs:
  checkout_code:
    <<: *js_defaults
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths: .
  install_deps:
    <<: *js_defaults
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          name: Restore Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Check for duplicated packages
          command: yarn deduplicate
      - save_cache:
          name: Save Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache
      - persist_to_workspace:
          root: .
          paths: .

  lint:
    <<: *js_defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Eslint
          command: yarn lint:ci
      - run:
          name: Ensure prettier was run
          command: yarn prettier:check

  build:
    <<: *js_defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: TypeScript
          command: yarn workspaces run build:typescript
      - run:
          name: Run TypeScript tests
          command: yarn workspace @material-ui/pickers run test:typescript
      - run:
          name: Build and analyze bundlesize
          command: yarn workspace @material-ui/pickers build:analyze

  jest_tests:
    description: Running jest test with separate library
    parameters:
      lib:
        description: 'Library to run tests'
        type: string
      after-tests:
        description: 'Steps that will be executed after test run is finished'
        type: steps
        default: []
    <<: *js_defaults
    steps:
      - attach_workspace:
          at: .
      # --runInBand required to not get out of memory @see https://discuss.circleci.com/t/memory-problems-with-jest-and-workers/10297
      - run: cd lib && yarn test:<<parameters.lib>> --runInBand
      - steps: << parameters.after-tests >>

  cypress_tests:
    description: Run cypress tests
    docker:
      - image: cypress/browsers:node12.8.1-chrome80-ff72
        environment:
          ## this enables colors in the output
          TERM: xterm
    working_directory: ~/material-ui-pickers
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          name: Restore Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Additional yarn install
          command: yarn install --frozen-lockfile
      - run:
          name: Install, if no cypress binary found
          command: yarn cypress install
      - run: yarn workspace docs build
      - run:
          background: true
          name: Run docs in background
          command: yarn workspace docs start
          environment:
            VISUAL_TESTING: true
      - run: npx wait-on http://localhost:3001
      - run: yarn percy exec -- cypress run  --record --browser chrome

####################
# Workflow
####################
workflows:
  version: 2.1
  build_and_test:
    jobs:
      - checkout_code
      - install_deps:
          name: 'Install deps'
          requires:
            - 'checkout_code'
      - build:
          name: 'Build and analyze bundlesize'
          requires:
            - 'Install deps'
      - lint:
          name: 'Run linters'
          requires:
            - 'Install deps'

      - cypress_tests:
          name: 'Cypress tests'
          requires:
            - checkout_code

      - jest_tests:
          name: 'Date-fns jest tests'
          lib: date-fns
          after-tests:
            - run: npx codecov
          requires:
            - 'Build and analyze bundlesize'

      - jest_tests:
          name: 'Dayjs jest tests'
          lib: dayjs
          requires:
            - 'Build and analyze bundlesize'

      - jest_tests:
          name: 'Moment jest tests'
          lib: moment
          requires:
            - 'Build and analyze bundlesize'

      - jest_tests:
          name: 'Luxon jest tests'
          lib: luxon
          requires:
            - 'Build and analyze bundlesize'
